name: ' Test...'

on:
  workflow_dispatch:
    inputs:
      atest:
        description: abc123
        required: false
        default: 'current'

permissions:
  actions: read
  contents: read
  id-token: write
  pull-requests: read
  checks: read

defaults:
  run:
    shell: powershell

jobs:
  init:
      name: init
      runs-on: ubuntu-latest
      outputs:
        environmentsMatrixJson: ${{ steps.DetermineDeploymentEnvironments.outputs.EnvironmentsMatrixJson }}
      steps:
      - name: Set matrix
        shell: pwsh
        run: |
          $environmentsMatrixJson = '{"matrix":{"include":[{"environment":"testEnv","os":"[\"windows-latest\"]","shell":"powershell"}]},"fail-fast":false}'
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "EnvironmentsMatrixJson=$environmentsMatrixJson"
          Write-Host "EnvironmentsMatrixJson=$environmentsMatrixJson"

  envStatic:
      name: Display env var static
      runs-on: ubuntu-latest
      environment: testEnv
      env:
        environmentVariable: ${{ vars.EnvVar }}
      steps:
      - name: Use variables
        shell: pwsh
        run: |
          Write-Host "Test var is $($env:environmentVariable)"
  
  envStrategy:
    strategy: 
      matrix:
        environment: [testEnv]
    runs-on: ubuntu-latest
    name: Display env var strategy
    env:
        environmentVariable: ${{ vars.EnvVar }}
    environment:
      name: ${{ matrix.environment }}
    steps:
    - name: Use variables
      shell: pwsh
      run: |
        Write-Host "Test var is $($env:environmentVariable)"

  envStrategyFromJson:
    needs: [ init ]
    strategy: ${{ fromJson(needs.init.outputs.environmentsMatrixJson) }}
    runs-on: ubuntu-latest
    name: Display env var strategy from JSON
    env:
        environmentVariable: ${{ vars.EnvVar }}
    environment:
      name: ${{ matrix.environment }}
    steps:
    - name: Use variables
      shell: pwsh
      run: |
        Write-Host "Test var is $($env:environmentVariable)"

    
